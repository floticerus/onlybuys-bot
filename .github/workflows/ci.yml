name: CI

on:
  # push:
  #   branches:
  #     - master
  #   tags:
  #     - v[0-9]+.[0-9]+.[0-9]+*
  # pull_request:

  # manual trigger
  workflow_dispatch:

jobs:
  dependabolt:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Use Node.js 17.x
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 17.x
          cache: yarn
      - name: Run dependabolt
        if: ${{ github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'dependabot/npm_and_yarn') && !contains(github.event.pull_request.head.ref, 'npm_and_yarn/packages') }}
        uses: malept/github-action-dependabolt@v4.0.1
        env:
          DEPENDABOLT_SSH_DEPLOY_KEY: ${{ secrets.DEPENDABOLT_SSH_DEPLOY_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ${{ matrix.os }}
    needs: dependabolt
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
      - name: Fix git checkout line endings
        run: git config --global core.autocrlf input
      - uses: actions/checkout@v2.4.0
      - name: Use Node.js 17.x
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 17.x
          cache: yarn
      - name: Install latest NPM on Windows
        if: matrix.os == 'windows-latest'
        # See https://github.com/actions/virtual-environments/issues/4856#issuecomment-1043256330
        # and https://github.com/actions/setup-node/issues/411#issuecomment-1051084491
        run: |
          npm install -g npm@8.3.1
          npm install -g npm@latest
      - name: Install bolt
        shell: bash
        run: |
          case "$(uname -s)" in
            Windows*|CYGWIN*|MINGW*|MSYS*) BOLT_VERSION=0.21.2 ;;
            *) BOLT_VERSION=latest ;;
          esac
          npm install -g bolt@$BOLT_VERSION
      - name: Install
        run: bolt
      - name: Lint
        run: bolt lint
      - name: Build
        run: bolt build
      # - name: Run tests
      #   run: bolt coverage:fast
      # - name: Upload code coverage to Codecov
      #   uses: codecov/codecov-action@v2.1.0
      #   with:
      #     file: ./coverage.lcov
      #     env_vars: CI_OS,TEST_TYPE
      #   env:
      #     CI_OS: ${{ matrix.os }}
      #     TEST_TYPE: fast
      - name: Zip
        uses: papeloto/action-zip@v1
        with:
          files: packages/electron/out
          dest: build.zip
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: onlybuys-bot-${{ matrix.os }}-v0.0.${{ github.run_number }}.zip
          path: ${{ github.workspace }}/build.zip
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.${{ github.run_number }}
          release_name: Release v0.0.${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Download Windows release asset
        uses: actions/download-artifact@v2
        with:
          name: onlybuys-bot-windows-latest-v0.0.${{ github.run_number }}.zip
      - name: Download MacOS release asset
        uses: actions/download-artifact@v2
        with:
          name: onlybuys-bot-macOS-latest-v0.0.${{ github.run_number }}.zip
      - name: Download Ubuntu release asset
        uses: actions/download-artifact@v2
        with:
          name: onlybuys-bot-ubuntu-latest-v0.0.${{ github.run_number }}.zip
      - name: Upload Windows Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/onlybuys-bot-windows-latest-v0.0.${{ github.run_number }}.zip
          asset_name: onlybuys-bot-windows-latest-v0.0.${{ github.run_number }}.zip
          asset_content_type: application/zip
      - name: Upload MacOS Asset
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/onlybuys-bot-macOS-latest-v0.0.${{ github.run_number }}.zip
          asset_name: onlybuys-bot-macOS-latest-v0.0.${{ github.run_number }}.zip
          asset_content_type: application/zip
      - name: Upload Ubuntu Asset
        id: upload-ubuntu-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/onlybuys-bot-ubuntu-latest-v0.0.${{ github.run_number }}.zip
          asset_name: onlybuys-bot-ubuntu-latest-v0.0.${{ github.run_number }}.zip
          asset_content_type: application/zip
